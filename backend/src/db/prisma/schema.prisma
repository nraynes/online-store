// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  account_id Int @default(autoincrement()) @id
  email String @db.VarChar
  password_hash String @db.VarChar
  dynamic_salt String @db.VarChar @unique
  verified Boolean
  photo String?
  deleted_on DateTime?
  token tokens[]
  email_key email_temp_keys[]
  pass_key pass_temp_keys[]
  review reviews[]
}

model tokens {
  token_id Int @default(autoincrement()) @id
  account accounts @relation(fields: [account_id], references: [account_id])
  account_id Int
  token String @db.VarChar
}

model email_temp_keys {
  email_key_id Int @default(autoincrement()) @id
  account accounts @relation(fields: [account_id], references: [account_id])
  account_id Int
  email_key String @db.VarChar
  expires DateTime
}

model pass_temp_keys {
  pass_key_id Int @default(autoincrement()) @id
  account accounts @relation(fields: [account_id], references: [account_id])
  account_id Int
  pass_key String @db.VarChar
  expires DateTime
}

model categories {
  category_id Int @default(autoincrement()) @id
  parent_category Int?
  category String @db.VarChar
  deleted_on DateTime?
  product products[]
}

model products {
  product_id Int @default(autoincrement()) @id
  category categories @relation(fields: [category_id], references: [category_id])
  category_id Int
  product String @db.VarChar
  description String @db.VarChar
  photo String?
  price Int
  deleted_on DateTime?
  review reviews[]
}

model reviews {
  review_id Int @default(autoincrement()) @id
  account accounts @relation(fields: [account_id], references: [account_id])
  account_id Int
  product products @relation(fields: [product_id], references: [product_id])
  product_id Int
  rating Int
  description String @db.VarChar
}